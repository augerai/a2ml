version: 2.1

orbs:
  docker: circleci/docker@1.4.0
  aws-eks: circleci/aws-eks@1.0.1
  role: airswap/assume-role@0.2.0
  aws-cli: circleci/aws-cli@1.3.0
  kubernetes: circleci/kubernetes@0.11.1
  helm: circleci/helm@1.0.0

jobs:
  build-docs:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          keys:
            - a2ml-python-doc-deps-v3-{{ arch }}-3.7-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "docs/requirements.txt" }}
            - a2ml-python-doc-deps-v3-{{ arch }}-3.7-{{ .Branch }}
            - a2ml-python-doc-deps-v3-{{ arch }}-3.7
      - run:
          name: Install dependencies
          command: |
            virtualenv venv
            source venv/bin/activate
            make develop-docs
      - save_cache:
          key: a2ml-python-doc-deps-v3-{{ arch }}-3.7-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "docs/requirements.txt" }}
          paths:
            - "venv"
            - "/home/circleci/.cache/pip"
      - run:
          name: Build docs
          command: |
            source venv/bin/activate
            cd docs/
            make html
      - persist_to_workspace:
          root: docs/build
          paths: html
  publish-docs:
    docker:
      - image: node:10.15.0
    steps:
      - checkout
      - attach_workspace:
          at: docs/build
      - add_ssh_keys:
          fingerprints: "44:aa:23:95:60:12:6b:b5:8d:b2:e5:05:24:1f:94:cf"
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git config user.email "23641280+augerbot@users.noreply.github.com"
            git config user.name "augerbot"
            npm install -g --silent gh-pages@2.2.0
            gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/build/html
  build-and-test:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run: make config docker-test
      - run: make docker-save
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar.gz
  publish-docker:
    executor: docker/machine
    parameters:
      docker-tag:
        description: Tag to publish
        type: string
        default: latest
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - docker/check
      - run: make docker-load
      - run: DOCKER_TAG=<< parameters.docker-tag >> make docker-tag
      - docker/push:
          image: augerai/a2ml
          tag: << parameters.docker-tag >>

  publish-pip:
    docker:
      - image: circleci/python:3.7-stretch
    steps:
      - checkout
      - run:
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USERNAME" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run: make build
      - run: make release

  deploy-to-k8s:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: ${STAGING_CLUSTER_NAME}
      aws-region:
        description: |
          AWS region
        type: string
        default: ${AWS_DEFAULT_REGION}
      namespace:
        description: |
          a2ml namespace
        type: string
        default: a2ml
      release-name:
        description: |
          a2ml helm release-name
        type: string
        default: a2ml
      reuse-values:
        description: |
          Reuse last release's values and merge in any overrides
        type: boolean
        default: true
      account-id:
        description: |
          AWS account containing the cluster
        type: string
        default: ${ACCOUNT_ID}
      role-name:
        description: |
          AWS role to assume for deploying to eks
        type: string
        default: ${ROLE_NAME}
      values-to-override:
        description: |
          Values will be used as helm install --set "key1=value1,key2=value2"
        type: string
        default: ""
    steps:
      - aws-cli/setup
      - role/assume-role:
          account-id: << parameters.account-id >>
          role-name: << parameters.role-name >>
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          aws-region: << parameters.aws-region >>
          install-kubectl: true
      - helm/install-helm-client:
          version: v3.2.4
      - run:
          command: |
            helm repo add augerai https://augerai.github.io/charts
            helm repo update
            helm repo list
          name: Add augerai repo
      - helm/upgrade-helm-chart:
          helm-version: v3.2.4
          chart: augerai/a2ml
          namespace: << parameters.namespace >>
          release-name: << parameters.release-name >>
          reuse-values: << parameters.reuse-values >>
          values-to-override: << parameters.values-to-override >>

workflows:
  build-test-publish:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /^v.*/
      - build-docs
      - publish-docs:
          requires:
            - build-and-test
            - build-docs
          filters:
            branches:
              only:
                - master
      - publish-docker:
          context: docker-hub
          name: docker-publish-tag
          docker-tag: $CIRCLE_TAG
          requires:
            - build-and-test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-docker:
          context: docker-hub
          name: docker-publish-master
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /^v.*/
      - deploy-to-k8s:
          name: deploy-to-k8s-master
          cluster-name: ${STAGING_CLUSTER_NAME}
          values-to-override: "image.tag=latest"
          release-name: a2ml
          namespace: a2ml
          context: eks
          requires:
            - docker-publish-master
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /^v.*/
      - deploy-to-k8s:
          name: deploy-to-k8s
          namespace: a2ml
          release-name: a2ml
          values-to-override: "image.tag=$CIRCLE_TAG"
          context: eks
          requires:
            - docker-publish-tag
          account-id: ${PROD_ACCOUNT_ID}
          cluster-name: ${PROD_CLUSTER_NAME}
          role-name: ${PROD_ROLE_NAME}
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - publish-pip:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context: pypi
